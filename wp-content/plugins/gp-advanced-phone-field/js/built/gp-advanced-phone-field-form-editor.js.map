{"version":3,"file":"gp-advanced-phone-field-form-editor.js","mappings":"mBAAA,IAAMA,EAAIC,OAAOC,OAGjBF,GAAE,WACGC,OAAOE,cAAcC,eAAe,WACvCH,OAAOE,cAAcE,OAAS,0BAG/BC,GACD,IAEA,IAAMC,EAA0B,SAACC,G,QAChCN,OAAO,8BAA8BO,SAErC,IAAMC,EAAeR,OAAO,uBAE5B,GAAIM,EAAS,CACZ,IAAMG,EAAUT,OAAO,kXAG6E,QAA3B,EAAAD,OAAOW,aAAaC,eAAO,eAAEC,oBAAmB,2CAIzHJ,EAAaK,KAAK,YAAY,GAC9BJ,EAAQK,YAAYN,GAGc,mBAAlB,QAAZ,EAAAT,OAAOgB,aAAK,eAAEC,eACjBlB,EAAE,uBAAuBmB,IAAI,iBAC7BlB,OAAOmB,oBAAoB,iB,MAG5BV,EAAaK,KAAK,YAAY,EAEhC,EAEMT,EAAa,WAClBN,EAAE,iBAAiBqB,GAAG,UAAU,WAC/BpB,OAAOqB,iBAAiB,cAAeC,KAAKC,SAC5CjB,EAAwBgB,KAAKC,QAC9B,IAEAxB,EAAEyB,UAAUJ,GAAG,6BAA6B,SAASK,EAAOT,EAAOU,GAClE,IAAMnB,IAAYS,EAAMW,YAExB5B,EAAE,iBAAiBe,KAAK,UAAWP,GACnCD,EAAwBC,EACzB,GACD,C","sources":["webpack://gp-advanced-phone-field/./js/src/form-editor.ts"],"sourcesContent":["const $ = window.jQuery!;\n\n// Register field setting so Gravity Forms shows it in the sidebar.\n$(function() {\n\tif (window.fieldSettings.hasOwnProperty('phone')) {\n\t\twindow.fieldSettings.phone += ', .gpapf-field-setting';\n\t}\n\n\tbindEvents();\n});\n\nconst togglePhoneFormatNotice = (enabled: boolean) => {\n\tjQuery('#gpapf-phone-format-notice').remove();\n\n\tconst $phoneFormat = jQuery('#field_phone_format');\n\n\tif (enabled) {\n\t\tconst $notice = jQuery(`<div id=\"gpapf-phone-format-notice\" class=\"gform-accessibility-warning field_setting gform-alert gform-alert--accessibility gform-alert--inline\">\n\t\t\t\t\t<span class=\"gform-icon gform-icon--password gform-alert__icon\"></span>\n\t\t\t\t\t<div class=\"gform-alert__message-wrap\">\n\t\t\t\t\t\t<p class=\"gform-alert__message\" style=\"margin: 0;padding-top:2px;\">${window.GPAPF_EDITOR.strings?.int_format_required}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);\n\n\t\t$phoneFormat.prop('disabled', true);\n\t\t$notice.insertAfter($phoneFormat);\n\n\t\t// Change the format if it's not already international.\n\t\tif (window.field?.phoneFormat !== 'international') {\n\t\t\t$('#field_phone_format').val('international');\n\t\t\twindow.SetFieldPhoneFormat('international');\n\t\t}\n\t} else {\n\t\t$phoneFormat.prop('disabled', false);\n\t}\n};\n\nconst bindEvents = () => {\n\t$('#gpapf-enable').on('change', function(this: HTMLInputElement) {\n\t\twindow.SetFieldProperty('gpapfEnable', this.checked);\n\t\ttogglePhoneFormatNotice(this.checked);\n\t});\n\n\t$(document).on('gform_load_field_settings', function(event, field, form) {\n\t\tconst enabled = !!field.gpapfEnable;\n\n\t\t$('#gpapf-enable').prop('checked', enabled);\n\t\ttogglePhoneFormatNotice(enabled);\n\t});\n};\n\n// Make this a module to avoid TypeScript error with block-scoped variables since we're not importing anything\nexport {};\n"],"names":["$","window","jQuery","fieldSettings","hasOwnProperty","phone","bindEvents","togglePhoneFormatNotice","enabled","remove","$phoneFormat","$notice","GPAPF_EDITOR","strings","int_format_required","prop","insertAfter","field","phoneFormat","val","SetFieldPhoneFormat","on","SetFieldProperty","this","checked","document","event","form","gpapfEnable"],"sourceRoot":""}